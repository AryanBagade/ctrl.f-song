// package shazam

// import (
// 	"bytes"
// 	"encoding/json"
// 	"fmt"
// 	"log"
// 	"os/exec"
// 	"song-recognition/db"
// )

// // SongInfo represents the JSON structure from recognize_song.py
// type SongInfo struct {
// 	Title  string `json:"title"`
// 	Artist string `json:"artist"`
// }

// func runPythonScript(script string) (string, error) {
// 	cmd := exec.Command("python3", script)

// 	var out bytes.Buffer
// 	cmd.Stdout = &out
// 	cmd.Stderr = &out

// 	err := cmd.Run()
// 	return out.String(), err
// }

// func main() {
// 	fmt.Println("üöÄ Running `watch_recordings.py` to copy the latest recording...")
// 	output, err := runPythonScript("watch_recordings.py")
// 	if err != nil {
// 		log.Fatalf("‚ùå Error running watch_recordings.py: %v\nOutput: %s", err, output)
// 	}
// 	fmt.Println("‚úÖ Copy successful!\n", output)

// 	fmt.Println("üéµ Running `recognize_song.py` to identify the song...")
// 	output, err = runPythonScript("recognize_song.py")
// 	if err != nil {
// 		log.Fatalf("‚ùå Error running recognize_song.py: %v\nOutput: %s", err, output)
// 	}

// 	// üîç Debugging: Print raw Python output
// 	fmt.Println("üîç Raw Output from Python:\n", output)

// 	// ‚úÖ Extract the raw title from Python output
// 	normalizedTitle, err := extractSongTitle(output)
// 	if err != nil {
// 		log.Fatalf("‚ùå Failed to extract song title: %v", err)
// 	}

// 	fmt.Printf("üé∂ Normalized Song Title: %s\n", normalizedTitle)

// 	// ‚úÖ Use existing database instance
// 	dbInstance, err := db.NewSQLiteClient("../db.sqlite3")
// 	if err != nil {
// 		log.Fatalf("‚ùå Failed to connect to database: %v", err)
// 	}
// 	defer dbInstance.Close()

// 	// ‚úÖ Fetch song by **cleaned** title
// 	song, found, err := dbInstance.GetSongByTitle(normalizedTitle)
// 	if err != nil {
// 		log.Fatalf("‚ùå Database error: %v", err)
// 	}

// 	// ‚úÖ Print results
// 	if found {
// 		fmt.Printf("‚úÖ Song FOUND in database: %s by %s (YouTube ID: %s)\n", song.Title, song.Artist, song.YouTubeID)
// 	} else {
// 		fmt.Printf("‚ùå Song NOT found in database: %s\n", normalizedTitle)
// 	}
// }

// // ‚úÖ Extract the song title from JSON output
// func extractSongTitle(output string) (string, error) {
// 	var songInfo SongInfo
// 	err := json.Unmarshal([]byte(output), &songInfo) // Decode JSON
// 	if err != nil {
// 		return "", fmt.Errorf("failed to parse JSON: %v", err)
// 	}
// 	return songInfo.Title, nil
// }
